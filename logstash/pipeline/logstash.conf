input {	
	# tcp {
	# 	port => 5000
	# }

	jdbc {
		
		jdbc_driver_library => "/lib/mysql-connector-java-8.0.20.jar"
		# Deprecated -->  jdbc_driver_class => "com.mysql.jdbc.Driver"
		jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
		jdbc_default_timezone => "Asia/Seoul"
		plugin_timezone => "local"
		jdbc_connection_string => "jdbc:mysql://121.78.114.84:3306/ttukttak?serverTimezone=Asia/Seoul"
		jdbc_user => "ttukttak"
		jdbc_password => "1564645175ttukttak"
		schedule => "*/5 * * * *" # Query주기 설정 
		tracking_column_type => "timestamp"
		tracking_column => "regist_date" # 쿼리 시작한 시간이 들어감
		#paging
		jdbc_paging_enabled => "true"
		jdbc_page_size => "100000"
		# statment :  regist_date -> :sql_last_value
		statement => "
SELECT a.goods_seq as 'goods_seq',
       goods_status,
       goods_name,
       provider_name,
       keyword,
       page_view,
       summary,
       free_shipping_use,
       reserve_unit,
       reserve_rate,
       reserve_policy,
       h.category_code as 'brand_category_code',
       i.title as 'brand_name',
       3.0 as 'default_reserve_percent',
       (SELECT GROUP_CONCAT(B.title)
        FROM fm_category_link AS A
        INNER JOIN fm_category as B ON A.category_code = B.category_code
        WHERE A.goods_seq = a.goods_seq) as 'goods_categoryname',
       (SELECT GROUP_CONCAT(B.category_code)
        FROM fm_category_link AS A
        INNER JOIN fm_category as B ON A.category_code = B.category_code
        WHERE A.goods_seq = a.goods_seq) as 'goods_categorycode',
       image,
       purchase_ea,
       review_count,
       a.regist_date as 'regist_date',
       a.update_date as 'update_date',
       default_consumer_price,
       default_price,
       default_discount,
       round((default_discount / default_consumer_price) * 100) as sale_rate
FROM fm_goods AS a
         INNER JOIN fm_goods_image AS b ON a.goods_seq = b.goods_seq
    AND a.goods_view = 'look'
    AND (
        a.regist_date > :sql_last_value
            OR a.update_date > :sql_last_value
        )
         INNER JOIN fm_provider AS e ON a.provider_seq = e.provider_seq
    AND e.provider_status = 'Y'
         INNER JOIN fm_shipping_group_summary as f ON a.shipping_group_seq = f.shipping_group_seq
         INNER JOIN fm_goods_option as g ON a.goods_seq = g.goods_seq
    AND g.default_option = 'y'
LEFT JOIN fm_brand_link as h ON a.goods_seq = h.goods_seq
LEFT JOIN fm_brand as i ON h.category_code=i.category_code
WHERE b.image_type = 'list1'
  AND b.cut_number = 1
		"
	}
}

## Add your filters / logstash plugins configuration here


filter{
	mutate {
		gsub => ["goods_name", "<.*?>", ""]
		split => {
			"goods_categoryname" => ","
			"goods_categorycode" => ","
			"keyword" => ","
		}
	}
}

output {
	elasticsearch {
		
			hosts => "elasticsearch:9200"
			user => "elastic"
			password => "elkttukttak"
			# set id
			document_id => "%{goods_seq}"
			# custom
			index => "goods"
			# action
			action => "update"
			doc_as_upsert => true
		
		
	}
}